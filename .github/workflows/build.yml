# .github/workflows/test.yml

name: Build

on:
  workflow_dispatch: {}
  #push:
    #branches: [ test ]

jobs:

####################################################################################################
  build-linux:

20.04 g++-8   -m64
20.04 g++     -m64
20.04 g++     -m32
20.04 g++     -mx32
20.04 clang++-8  -m64
20.04 clang++    -m64

22.04 g++        -m64
22.04 g++        -m32
22.04 g++-12     -m64
22.04 g++-13     -m64
22.04 clang++    -m64
22.04 clang++-15 -m64

22.04 aarch64-linux-gnu-g++
22.04 arm-linux-gnueabihf-g++
22.04 Alpine


    strategy:
      fail-fast: false
      matrix:
        compiler:
        - { label: "gcc8",    osver: "20.04", GCC: "gcc-8",    GXX: "g++-8",      setup: "apt-get install g++-8"  }
        - { label: "gcc9",    osver: "20.04", GCC: "gcc-9",    GXX: "g++-9",      setup: ""  }
        - { label: "gcc10",   osver: "20.04", GCC: "gcc-10",   GXX: "g++-10",     setup: "apt-get install g++-10-multilib"  }
        - { label: "gcc10",   osver: "22.04", GCC: "gcc-10",   GXX: "g++-10",     setup: "g++-10-multilib" }
        - { label: "gcc11",   osver: "22.04", GCC: "gcc-11",   GXX: "g++-11",     setup: "g++-11-multilib" }
        - { label: "gcc12",   osver: "22.04", GCC: "gcc-12",   GXX: "g++-12",     setup: "g++-12-multilib" }
        - { label: "gcc13",   osver: "22.04", GCC: "gcc-13",   GXX: "g++-13",     setup: "g++-13-multilib" }
        - { label: "clang8",  osver: "20.04", GCC: "clang-8",  GXX: "clang++-8",  setup: "apt-get install clang-8" }
        - { label: "clang10", osver: "20.04", GCC: "clang-10", GXX: "clang++-10", setup: "" }
        - { label: "clang13", osver: "22.04", GCC: "clang-13", GXX: "clang++-13", setup: "" }
        - { label: "clang14", osver: "22.04", GCC: "clang-14", GXX: "clang++-14", setup: "" }
        - { label: "clang15", osver: "22.04", GCC: "clang-15", GXX: "clang++-15", setup: "g++-multilib" }
        options:
        - { label: "64",  MARCH: "-m64" }
        - { label: "32",  MARCH: "-m32 -msse2 -mfpmath=sse" }
        - { label: "x32", MARCH: "-mx32" }
        exclude:
        - compiler: { descr: "gcc9" }
          options:  { descr: "x32" }
        - compiler: { descr: "clang13" }
          options:  { descr: "x32" }
        - compiler: { descr: "clang14" }
          options:  { descr: "x32" }
        - compiler: { descr: "clang15" }
          options:  { descr: "x32" }
    name: Build on Linux with ${{matrix.compiler.descr}}/${{matrix.options.descr}}
    runs-on: ubuntu-22.04

    steps:

    - name: Machine Information
      run: lscpu; free -h; df -h .
    - name: System Information
      run: date; uname -a; uptime; cat /etc/os-release; ls -C /boot || true
    - name: Context Information
      run: id; pwd; printf %s\\n "$SHELL"; printf %s\\n "$PATH"

    - name: Update Package DB
      run: sudo apt-get update
    - name: Install Multilib
      run: sudo apt-get install ${{matrix.compiler.libbase}}-multilib
    #- name: Install Valgrind
      #run: sudo apt-get --no-install-recommends install valgrind

    - name: Build Tools Information
      run: make --version; ${{matrix.compiler.GCC}} --version

    - name: Checkout
      uses: actions/checkout@v4

    - name: Run Make
      run: |
        make -j3 GCC='${{matrix.compiler.GCC}}' GXX='${{matrix.compiler.GXX}}' MARCH='${{matrix.options.MARCH}}'

    - name: Check
      run: |
        make -j3 GCC='${{matrix.compiler.GCC}}' GXX='${{matrix.compiler.GXX}}' MARCH='${{matrix.options.MARCH}}' run
      continue-on-error: true

    - name: Upload Results
      uses: actions/upload-artifact@v4
      with:
        name: build-${{matrix.compiler.descr}}-${{matrix.options.descr}}
        path: build
