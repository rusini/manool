# .github/workflows/docker.yaml

name: Build in Docker Containers

on:
  workflow_dispatch:
  push:
    branches: [ "test" ]

jobs:
  build:

    strategy:
      fail-fast: false
      matrix:
        target:
        - { label: "debian", os: "debian",              preinstall: "apt-get update; apt-get -y install procps", install: "apt-get -y install make g++" }
        - { label: "rhel",   os: "almalinux",           preinstall: "dnf -y install procps-ng",                  install: "dnf -y install make g++" }
        - { label: "suse",   os: "opensuse/tumbleweed", preinstall: "",                                          install: "zypper install -y make gcc-c++" }
        - { label: "arch",   os: "archlinux",           preinstall: "pacman -Syu",                               install: "pacman -S gcc" }
    name: Build under ${{matrix.target.os}}
    runs-on: ubuntu-22.04
    container: ${{matrix.target.os}}

    defaults:
      run:
        shell: bash

    steps:

    - name: Pre-Setup
      run: ${{matrix.target.preinstall}}

    - name: Machine Information
      run: |
        lscpu; free -h; df -h .
    - name: System Information
      run: |
        date; uname -a; w | head -1; cat /etc/os-release
    - name: Context Information
      run: |
        tty || :; id; printf %s\\n "$SHELL"; printf %s\\n "$PATH"; pwd

    - name: Setup
      run: ${{matrix.target.install}}

    - name: Build Tools Information
      run: |
        make --version; gcc --version

    - name: Checkout
      uses: actions/checkout@v4

    - name: Run Make (and Check)
      run: |
        make -j3 run \
           GCC='gcc' \
           GXX='g++' \
           CFLAGS='-Wno-psabi -O3 -fno-stack-protector -fcf-protection=none' \
           MARCH=

    - name: Upload Results
      uses: actions/upload-artifact@v4
      with:
        name: build-${{matrix.target.label}}
        path: build
